#!/bin/bash
pwdvalue="/home/dwy/script"
homeuser=$(echo '/home/dwy/')
komodo_binary=$(echo $homeuser"komodo/src/komodod")
komodo_cli=$(echo $homeuser"komodo/src/komodo-cli")
komodo_binary_dir=$(echo $homeuser"komodo/src")
komodo_binary_name='komodod'
chips_binary=$(echo $homeuser"chips3/src/chipsd")
chips_cli=$(echo $homeuser"chips3/src/chips-cli")
chips_binary_dir=$(echo $homeuser"chips3/src")
chips_binary_name='chipsd'
gamecredits_binary=$(echo $homeuser"GameCredits/src/gamecreditsd")
gamecredits_cli=$(echo $homeuser"GameCredits/src/gamecredits-cli")
gamecredits_binary_dir=$(echo $homeuser"GameCredits/src")
gamecredits_binary_name='gamecreditsd'
seed_ip=`getent hosts zero.kolo.supernet.org | awk '{ print $1 }'`
delay=20
notalllaunched='0'
re='^[0-9]+$'
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

#Take a coin/ac/soft in param, ant initialize values to get other functions to work.
launchlisting () {
        launchlistac="init"
        launchlistall=$(echo -e "btc\nchp\nkmd\nGAME")
        #launchlistall=$(echo -e "btc\nchp\nkmd\ngcs")
        launchlistallcommented=$launchlistall
        while read line; do
                if [ ! $line == 'komodo_asset' ]
                then
                        launchlistall+=$(echo -e "\n$line")
                        if [ "$launchlistac" == "init" ]
                        then
                                launchlistac=$(echo "$line")
                        else
                                launchlistac+=$(echo -e "\n$line")
                        fi
                fi
        done <<< "$(cat $homeuser/komodo/src/assetchains | grep komodo_asset | grep -v '#' | cut -d ' ' -f2)"
        launchlistallcoins=$launchlistall
        #SPECIAL : INCLUDING ALL ASSETCHAINS THAT WILL BE PROCESSED BY IGUANA
        while read line; do
                if [ ! $line == 'komodo_asset' ]
                then
                        launchlistallcommented+=$(echo -e "\n$line")
                fi
        done <<< "$(cat $homeuser/komodo/src/assetchains | grep komodo_asset | cut -d ' ' -f2)"
        launchlistdpow="init"
        while read line2; do
                if [ "$launchlistdpow" == "init" ]
                then
                        launchlistdpow=$(echo "$line2")
                else
                        launchlistdpow+=$(echo -e "\n$line2")
                fi
        done <<< "$(cat $homeuser/komodo/src/dpowassets | grep curl | grep -v \# | sed 's/symbol\\"\:\\\"/\n/g' | grep -v curl | cut -d '\' -f1)"
}
shouldrun () {
        while read line; do
                isrunning $line
        done <<< "$launchlistall"
}

inputparams() {
        case $1 in
                "iguana")
                        processname="iguana notary"
                        #processname="iguana testnet"
                ;;
                "iguanascreen")
                        processname="SCREEN -d -m -S iguana"
                ;;
                "gcs"|"GAME")
                        processname="$gamecredits_binary_name"
                        processcli="$gamecredits_cli"
                        processmincount=1
                        processargs=""
                        processpath="$gamecredits_binary_dir"
                        processlaunch="$processname $processargs"
                        processaddress="$gamecreditsaddress"
                        notarysize='0.001'
                        statssize='0.00083600'
                        debugpath="$homeuser.GameCredits/debug.log"
                        ntrzaddr="RXL3YXG2ceaB6C5hfJcN4fvmLH2C34knhA"
                ;;
                "chp"|"CHIPS")
                        processname="$chips_binary_name"
                        processcli="$chips_cli"
                        processmincount=1
                        processargs=""
                        processpath="$chips_binary_dir"
                        processlaunch="$processname $processargs"
                        processaddress="$kmdaddress"
                        notarysize='0.0001'
                        statssize='0.00083600'
                        debugpath="$homeuser.chips/debug.log"
                        ntrzaddr="RXL3YXG2ceaB6C5hfJcN4fvmLH2C34knhA"
                ;;
                "btc")
                        processname="bitcoind"
                        processcli="bitcoin-cli"
                        processmincount=1
                        processargs=""
                        processpath="."
                        processlaunch="$processname"
                        processaddress="$btcaddress"
                        notarysize='0.0001'
                        statssize='0.001064'
                        debugpath="$homeuser.bitcoin/debug.log"
                        ntrzaddr="1P3rU1Nk1pmc2BiWC8dEy9bZa1ZbMp5jfg"
                ;;
                                "kmd")
                        processname="$komodo_binary_name -genproclimit=1"
                        processcli="$komodo_cli"
                        processmincount=1
                        processargs=""
                        processpath="$komodo_binary_dir"
                        processlaunch="./$processname $processargs"
                        processaddress="$kmdaddress"
                        notarysize='0.0001'
                        statssize='0.00098800'
                        debugpath="$homeuser.komodo/debug.log"
                        ntrzaddr="RXL3YXG2ceaB6C5hfJcN4fvmLH2C34knhA"
                ;;
                *)
                        aclist=$(echo $launchlistallcommented | grep $1 | wc -l)
                        if [ $aclist -eq 1 ]
                        then
                                supplyac=$(cat $homeuser/komodo/src/assetchains | grep $1 | cut -d ' ' -f3)
                                processname="$komodo_binary_name -ac_name=$1"
                                processcli="$komodo_cli -ac_name=$1"
                                processmincount=1
                                processargs="-ac_supply=$supplyac -addnode=$seed_ip"
                                processpath="$komodo_binary_dir"
                                processlaunch="./$processname $processargs"
                                processaddress="$kmdaddress"
                                notarysize='0.0001'
                                statssize='0.00083600'
                                debugpath="$homeuser.komodo/$1/debug.log"
                                ntrzaddr="RXL3YXG2ceaB6C5hfJcN4fvmLH2C34knhA"
                        else
                                echo -e "$NC$(date '+%Y-%m-%d %H:%M:%S')$RED\tinputparams\t$1\tunknown param$NC"
                                exit
                        fi
                ;;
        esac
}


isrunning() {
        inputparams $1
        if [ $(eval "pgrep -f '$processname'" | wc -l) == "1" ]
        then
                if [ -z "$2" ]
                then
                        echo -e "$NC$(date '+%Y-%m-%d %H:%M:%S')$GREEN\tisrunning\t$1\tis running$NC"
                fi
                true
        else
                if [ -z "$2" ]
                then
                        echo -e "$NC$(date '+%Y-%m-%d %H:%M:%S')$RED\tisrunning\t$1\tis not running$NC"
                fi
                false
        fi
}

generatejson () {

        echo "  {\"coin\": ["
                totaltojson=$(echo  "$launchlistallcoins" | wc -l)
                actualjsonparsed=0
                while read line; do
                        actualjsonparsed=$(($actualjsonparsed+1))
                        if isrunning $line nolog
                                then
                                        inputparams $line
                                        cd $processpath
                                        actualblock=$($processcli getblockchaininfo 2>/dev/null | jq -r .blocks)
                                        actualheader=$($processcli getblockchaininfo 2>/dev/null | jq -r .headers)
                                        bhactualblock=$($processcli getblockhash $actualblock 2>/dev/null)
                                        lastnotarized=$($processcli getinfo 2>/dev/null | jq -r .notarized)
                                        lastnotarizedbh=$($processcli getinfo 2>/dev/null | jq -r .notarizedhash)
                                        lastnotarizedtxid=$($processcli getinfo 2>/dev/null | jq -r .notarizedtxid)
                                        echo "{
                                                \"name\": \"$line\",
                                                \"running\": \"1\",
                                                \"block\": \"$actualblock\",
                                                \"headers\": \"$actualheader\",
                                                \"bestblockhash\": \"$bhactualblock\",
                                                \"lastnotarized\": \"$lastnotarized\",
                                                \"lastnotarizedbh\": \"$lastnotarizedbh\",
                                                \"lastnotarizedtxid\": \"$lastnotarizedtxid\"
                                                        "
                                                if [ "$actualjsonparsed" -eq "$totaltojson" ]
                                                then
                                                        echo "}"
                                                else
                                                        echo "},"
                                                fi
                                else
                                        echo "{
                                                \"name\": \"$line\",
                                                \"running\": \"0\",
                                                \"block\": \"0\",
                                                \"headers\": \"0\",
                                                \"bestblockhash\": \"0\",
                                                \"lastnotarized\": \"0\",
                                                \"lastnotarizedbh\": \"0\",
                                                \"lastnotarizedtxid\": \"0\"
                                                        "
                                        if [ "$actualjsonparsed" -eq "$totaltojson" ]
                                        then
                                                echo "}"
                                        else
                                                echo "},"
                                        fi
                                fi
                done <<< "$launchlistallcoins"
        echo "  ]
        }"
}




launchlisting
case $1 in
        "json")
                jsondatefilestamp=$(date +%s)
                cd $pwdvalue
                mkdir jsontosend 2>/dev/null
                generatejson > $(echo "$pwdvalue")/jsontosend/$(echo "$jsondatefilestamp").json
                scp $(echo "$pwdvalue")/jsontosend/$(echo "$jsondatefilestamp").json dwy@notarystats:/var/www/html/json
        ;;
         "shouldrun")
                echo -e "$NC$(date '+%Y-%m-%d %H:%M:%S')$NC\tManual Call\t$1$NC"
                shouldrun
        ;;

        *)
                echo "Wtf are you doin here"
        ;;
esac
